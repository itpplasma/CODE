image: ghcr.io/itpplasma/devel-tex

workflow:
  rules:
    - if: "$CI_COMMIT_BRANCH"
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" &&      $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'

variables:
  GIT_HTTPS: "true"

stages:
  - libs
  - codes
  - projects


### Libs

fgsl:
  stage: libs
  script:
    - cd libs
    - ../scripts/setup_fgsl.sh
  artifacts:
    paths:
      - libs/fgsl-1.5.0/

mfem:
  stage: libs
  script:
    - cd libs
    - ../scripts/setup_mfem.sh
  artifacts:
    paths:
      - libs/mfem-4.6.2-rc0/

libneo:
  stage: libs
  script:
    - source scripts/util.sh
    - clone_github libneo
    - cd libneo
    - ../scripts/checkout_branch.sh $CI_COMMIT_BRANCH
    - ./build.sh
  artifacts:
    paths:
      - libneo/

stellopt:
  stage: libs
  rules:  # Run only nightly builds on schedule
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      allow_failure: true
  script:
    - cd libs
    - source ../scripts/setup_stellopt.sh
  artifacts:
    paths:
      - libs/STELLOPT/LIBSTELL/Release/libstell.so
      - libs/STELLOPT/LIBSTELL/Release/libstell.a
      - libs/STELLOPT/VMEC2000/Release/libvmec.a
      - libs/STELLOPT/BOOZ_XFORM/Release/xbooz_xform
      - libs/STELLOPT/COBRAVMEC/Release/xcobravmec
      - libs/STELLOPT/BNORM/Release/xbnorm
      - libs/STELLOPT/WALL_ACCELERATE/Release/xwallacc
      - libs/STELLOPT/VMEC2SPEC/Release/xvmec2spec
      - libs/STELLOPT/J_INVARIANT/Release/xjinvariant
      - libs/STELLOPT/FIELDLINES/Release/xfieldlines
      - libs/STELLOPT/NEO/Release/xneo
      - libs/STELLOPT/VMEC2STEL/Release/xvmec2stel
      - libs/STELLOPT/BOOTSJ/Release/xbootsj
      - libs/STELLOPT/TORLINES/Release/xtorlines
      - libs/STELLOPT/STELLOPTV2/Release/xstelloptv2
      - libs/STELLOPT/MAKEGRID/Release/xgrid
      - libs/STELLOPT/THRIFT/Release/xthrift
      - libs/STELLOPT/VMEC2XGC/Release/xvmec2xgc
      - libs/STELLOPT/PENTA/Release/xpenta
      - libs/STELLOPT/DIAGNO/Release/xdiagno
      - libs/STELLOPT/VMEC2000/Release/xvmec2000
      - libs/STELLOPT/BEAMS3D/Release/xbeams3d
      - libs/STELLOPT/VMEC2PIES/Release/xvmec2pies
      - libs/STELLOPT/VMEC2V690/Release/xvmec2v690
      - libs/STELLOPT/NESCOIL/Release/xnescoil
      - libs/STELLOPT/COILOPT/Release/xcoilopt
      - libs/STELLOPT/DKES/Release/xdkes
      - libs/STELLOPT/BCYCLIC/Release/xbcyclic


### Codes

test-setup:
  stage: codes
  needs: []
  script:
    - source setup.sh
    - python -c "import libneo"

mephit:
  stage: codes
  needs: ["libneo", "fgsl", "mfem"]
  script:
    - source scripts/util.sh
    - clone_gitlab MEPHIT
    - cd MEPHIT
    - ../scripts/checkout_branch.sh $CI_COMMIT_BRANCH
    - mkdir build
    - cd build
    - export LIBNEO_DIR=$CI_PROJECT_DIR/libneo/build
    - export MFEM_DIR=$CI_PROJECT_DIR/libs/mfem-4.6.2-rc0/build
    - export FGSL_DIR=$CI_PROJECT_DIR/libs/fgsl-1.5.0
    - cmake ..
    - make -j4
  artifacts:
    paths:
      - MEPHIT/

kim:
  stage: codes
  needs: []
  script:
    - source scripts/util.sh
    - clone_gitlab kim
    - cd kim
    - ../scripts/checkout_branch.sh $CI_COMMIT_BRANCH
    - mkdir build
    - cd build
    - cmake .. -DCMAKE_Fortran_FLAGS=-I/usr/include/hdf5/serial
    - make
  artifacts:
    paths:
      - kim/

neo2-job:
  stage: codes
  needs: ["libneo", "fgsl"]
  script:
    - source scripts/util.sh
    - source scripts/setup_venv.sh
    - clone_github NEO-2
    - scripts/setup_neo2.sh
  artifacts:
    paths:
      - NEO-2/

neort:
  stage: codes
  needs: []
  script:
    - source scripts/util.sh
    - mkdir contrib
    - cd contrib
    - clone_github quadpack
    - clone_github vode
    - cd ..
    - clone_github spline
    - clone_github BOOZER_MAGFIE
    - clone_github NEO-RT
    - cd NEO-RT
    - ../scripts/checkout_branch.sh $CI_COMMIT_BRANCH
    - mkdir build && cd build
    - cmake ..
    - make
  artifacts:
    paths:
      - contrib/
      - spline/
      - BOOZER_MAGFIE/
      - NEO-RT/

simple:
  stage: codes
  needs: []
  script:
    - source scripts/util.sh
    - source scripts/setup_venv.sh
    - clone_github SIMPLE
    - cd SIMPLE
    - ../scripts/checkout_branch.sh $CI_COMMIT_BRANCH
    - ./build.sh
  artifacts:
    paths:
      - SIMPLE/

gorilla:
  stage: codes
  needs: []
  script:
    - source scripts/util.sh
    - clone_github GORILLA
    - cd GORILLA
    - ../scripts/checkout_branch.sh $CI_COMMIT_BRANCH
    - ./build.sh
  artifacts:
    paths:
      - GORILLA/

efit_to_boozer:
  stage: codes
  needs: []
  script:
    - source scripts/util.sh
    - source scripts/setup_venv.sh
    - clone_github efit_to_boozer
    - cd efit_to_boozer
    - make
  artifacts:
    paths:
      - efit_to_boozer/

chease:
  stage: codes
  needs: []
  script:
    - scripts/setup_chease.sh
  artifacts:
    paths:
      - CHEASE/


### Projects

ntv-demo:
  stage: projects
  needs: ["libneo"]
  script:
    - source scripts/util.sh
    - clone_github ntv-demo
    - cd ntv-demo
  artifacts:
    paths:
      - ntv-demo/
