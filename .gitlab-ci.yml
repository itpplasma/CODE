image: ghcr.io/itpplasma/devel-tex

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" &&      $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'

variables:
  GIT_HTTPS: "true"

stages:
  - external
  - libneo
  - codes
  - projects


### External Libs and Codes

fgsl:
  stage: external
  needs: []
  script:
    - source scripts/util.sh
    - cd external
    - ../scripts/setup_fgsl.sh
    - tar czf fgsl-1.5.0.tar.gz fgsl-1.5.0
    - upload_package fgsl 1.5.0

mfem:
  stage: external
  needs: []
  script:
    - source scripts/util.sh
    - cd external
    - ../scripts/setup_mfem.sh
    - tar czf mfem-4.6.2-rc0.tar.gz mfem-4.6.2-rc0
    - upload_package mfem 4.6.2-rc0

stellopt:
  stage: external
  needs: []
  rules:  # Run only nightly builds on schedule
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      allow_failure: true
  script:
    - source scripts/util.sh
    - cd external
    - source ../scripts/setup_stellopt.sh
    - tar czf STELLOPT-dev.tar.gz STELLOPT
    - upload_package STELLOPT dev

chease:
  stage: external
  needs: []
  script:
    - cd external
    - ../scripts/setup_chease.sh
  artifacts:
    paths:
      - external/CHEASE/


### libneo

libneo:
  stage: libneo
  needs: []
  script:
    - source scripts/util.sh
    - source scripts/setup_venv.sh
    - export CODE=`pwd`
    - source scripts/setup_libneo.sh
    - tar czf libneo-dev.tar.gz efit_to_boozer/ libneo/ .venv/
    - upload_package libneo dev


### Codes

test-setup:
  stage: codes
  needs: []
  script:
    - source setup.sh
    - source activate.sh
    - python -c "import libneo"

mephit:
  stage: codes
  needs: ["fgsl", "mfem", "libneo"]
  script:
    - source scripts/util.sh
    - install_package libneo dev
    - pushd external
    - install_package fgsl 1.5.0
    - install_package mfem 4.6.2-rc0
    - popd
    - clone_gitlab MEPHIT
    - source scripts/setup_mephit.sh
  artifacts:
    paths:
      - MEPHIT/

kim:
  stage: codes
  needs: []
  script:
    - source scripts/util.sh
    - clone_gitlab kim
    - cd kim
    - ../scripts/checkout_branch.sh $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
    - mkdir build
    - cd build
    - cmake .. -DCMAKE_Fortran_FLAGS=-I/usr/include/hdf5/serial
    - make
  artifacts:
    paths:
      - kim/

neo2-job:
  stage: codes
  needs: ["fgsl", "libneo"]
  script:
    - source scripts/util.sh
    - install_package libneo dev
    - pushd external; install_package fgsl 1.5.0; popd
    - source activate.sh
    - clone_github NEO-2
    - scripts/setup_neo2.sh
  artifacts:
    paths:
      - NEO-2/

neort:
  stage: codes
  needs: []
  script:
    - source scripts/util.sh
    - mkdir contrib
    - cd contrib
    - clone_github quadpack
    - clone_github vode
    - cd ..
    - clone_github spline
    - clone_github BOOZER_MAGFIE
    - clone_github NEO-RT
    - cd NEO-RT
    - ../scripts/checkout_branch.sh $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
    - mkdir build && cd build
    - cmake ..
    - make
  artifacts:
    paths:
      - contrib/
      - spline/
      - BOOZER_MAGFIE/
      - NEO-RT/

simple:
  stage: codes
  needs: ["libneo"]
  script:
    - source scripts/util.sh
    - install_package libneo dev
    - source activate.sh
    - clone_github SIMPLE
    - cd SIMPLE
    - ../scripts/checkout_branch.sh $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
    - ./build.sh
  artifacts:
    paths:
      - SIMPLE/

gorilla:
  stage: codes
  needs: []
  script:
    - source scripts/util.sh
    - clone_github GORILLA
    - cd GORILLA
    - ../scripts/checkout_branch.sh $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
    - ./build.sh
  artifacts:
    paths:
      - GORILLA/


### Projects

ntv-demo:
  stage: projects
  needs: ["libneo"]
  script:
    - source scripts/util.sh
    - install_package libneo dev
    - source activate.sh
    - clone_github ntv-demo
    - cd ntv-demo
  artifacts:
    paths:
      - ntv-demo/
